//
// Generated by Bluespec Compiler, version 2025.01.1 (build 65e3a87a)
//
// On Mon Sep  8 02:29:51 EDT 2025
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCounter(CLK,
		 RST_N);
  input  CLK;
  input  RST_N;

  // register count
  reg [7 : 0] count;
  wire [7 : 0] count$D_IN;
  wire count$EN;

  // register dcount
  reg [7 : 0] dcount;
  wire [7 : 0] dcount$D_IN;
  wire dcount$EN;

  // rule scheduling signals
  wire WILL_FIRE_RL_decrement;

  // rule RL_decrement
  assign WILL_FIRE_RL_decrement = count == 8'd0 && dcount != 8'd0 ;

  // register count
  assign count$D_IN = count + 8'd1 ;
  assign count$EN = dcount == 8'd0 ;

  // register dcount
  assign dcount$D_IN = dcount - 8'd1 ;
  assign dcount$EN = WILL_FIRE_RL_decrement ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        count <= `BSV_ASSIGNMENT_DELAY 8'd0;
	dcount <= `BSV_ASSIGNMENT_DELAY 8'd10;
      end
    else
      begin
        if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (dcount$EN) dcount <= `BSV_ASSIGNMENT_DELAY dcount$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    count = 8'hAA;
    dcount = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (dcount == 8'd0 && count == 8'd10) $finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (dcount == 8'd0) $display("Count = %0d", count + 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decrement && dcount == 8'd0) $finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decrement) $display("dCount = %0d", dcount - 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_decrement && dcount == 8'd0) $finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mkCounter

